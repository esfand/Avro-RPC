/*
 * Copyright 2011 James Baldassari
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 * limitations under the License.
 */

@namespace("jbaldassari.rtb")
protocol Bidder {

  record Dimension {
    int height;
    int width;
  }

  record BidRequest {
    string auctionId;
    Dimension dimension;
  }

  record BidResponse {
    string auctionId;
    long maxBidMicroCpm;
    union {string, null} creativeSnippet;
  }

  record AuctionResult {
    string auctionId;
    boolean isWon = false;
    union {string, null} winningBidderId;
    union {BidResponse, null} winningBid;
  }

  enum NotificationType {
    WIN,
    LOSS
  }

  record Notification {
    string auctionId;
    NotificationType notificationType;
    long winPriceMicroCpm;
  }

  error BidderError {
    int code;
    union {string, null} message;
  }
  
  BidResponse bid(BidRequest bidRequest) throws BidderError;

  void notify(Notification notification) oneway;
  
}